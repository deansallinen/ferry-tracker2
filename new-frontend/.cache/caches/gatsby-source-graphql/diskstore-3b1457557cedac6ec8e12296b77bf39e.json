{"expireTime":9007200805721153000,"key":"gatsby-source-graphql-schema-FTAPI-ftapi","val":"schema {\n  query: query_root\n  mutation: mutation_root\n  subscription: subscription_root\n}\n\n\"\"\"conflict action\"\"\"\nenum conflict_action {\n  \"\"\"ignore the insert on this row\"\"\"\n  ignore\n\n  \"\"\"update the row with the given values\"\"\"\n  update\n}\n\n\"\"\"\nexpression to compare columns of type integer. All fields are combined with logical 'AND'.\n\"\"\"\ninput integer_comparison_exp {\n  _eq: Int\n  _gt: Int\n  _gte: Int\n  _in: [Int]\n  _is_null: Boolean\n  _lt: Int\n  _lte: Int\n  _neq: Int\n  _nin: [Int]\n}\n\n\"\"\"mutation root\"\"\"\ntype mutation_root {\n  \"\"\"\n  delete data from the table: \"route\"\n  \"\"\"\n  delete_route(\n    \"\"\"filter the rows which have to be deleted\"\"\"\n    where: route_bool_exp!\n  ): route_mutation_response\n\n  \"\"\"\n  delete data from the table: \"sailing\"\n  \"\"\"\n  delete_sailing(\n    \"\"\"filter the rows which have to be deleted\"\"\"\n    where: sailing_bool_exp!\n  ): sailing_mutation_response\n\n  \"\"\"\n  delete data from the table: \"todays_sailings\"\n  \"\"\"\n  delete_todays_sailings(\n    \"\"\"filter the rows which have to be deleted\"\"\"\n    where: todays_sailings_bool_exp!\n  ): todays_sailings_mutation_response\n\n  \"\"\"\n  insert data into the table: \"route\"\n  \"\"\"\n  insert_route(\n    \"\"\"the rows to be inserted\"\"\"\n    objects: [route_insert_input!]!\n\n    \"\"\"on conflict condition\"\"\"\n    on_conflict: route_on_conflict\n  ): route_mutation_response\n\n  \"\"\"\n  insert data into the table: \"sailing\"\n  \"\"\"\n  insert_sailing(\n    \"\"\"the rows to be inserted\"\"\"\n    objects: [sailing_insert_input!]!\n\n    \"\"\"on conflict condition\"\"\"\n    on_conflict: sailing_on_conflict\n  ): sailing_mutation_response\n\n  \"\"\"\n  insert data into the table: \"todays_sailings\"\n  \"\"\"\n  insert_todays_sailings(\n    \"\"\"the rows to be inserted\"\"\"\n    objects: [todays_sailings_insert_input!]!\n  ): todays_sailings_mutation_response\n\n  \"\"\"\n  update data of the table: \"route\"\n  \"\"\"\n  update_route(\n    \"\"\"\n    increments the integer columns with given value of the filtered values\n    \"\"\"\n    _inc: route_inc_input\n\n    \"\"\"sets the columns of the filtered rows to the given values\"\"\"\n    _set: route_set_input\n\n    \"\"\"filter the rows which have to be updated\"\"\"\n    where: route_bool_exp!\n  ): route_mutation_response\n\n  \"\"\"\n  update data of the table: \"sailing\"\n  \"\"\"\n  update_sailing(\n    \"\"\"\n    increments the integer columns with given value of the filtered values\n    \"\"\"\n    _inc: sailing_inc_input\n\n    \"\"\"sets the columns of the filtered rows to the given values\"\"\"\n    _set: sailing_set_input\n\n    \"\"\"filter the rows which have to be updated\"\"\"\n    where: sailing_bool_exp!\n  ): sailing_mutation_response\n\n  \"\"\"\n  update data of the table: \"todays_sailings\"\n  \"\"\"\n  update_todays_sailings(\n    \"\"\"\n    increments the integer columns with given value of the filtered values\n    \"\"\"\n    _inc: todays_sailings_inc_input\n\n    \"\"\"sets the columns of the filtered rows to the given values\"\"\"\n    _set: todays_sailings_set_input\n\n    \"\"\"filter the rows which have to be updated\"\"\"\n    where: todays_sailings_bool_exp!\n  ): todays_sailings_mutation_response\n}\n\n\"\"\"column ordering options\"\"\"\nenum order_by {\n  \"\"\"in the ascending order, nulls last\"\"\"\n  asc\n\n  \"\"\"in the ascending order, nulls first\"\"\"\n  asc_nulls_first\n\n  \"\"\"in the ascending order, nulls last\"\"\"\n  asc_nulls_last\n\n  \"\"\"in the descending order, nulls first\"\"\"\n  desc\n\n  \"\"\"in the descending order, nulls first\"\"\"\n  desc_nulls_first\n\n  \"\"\"in the descending order, nulls last\"\"\"\n  desc_nulls_last\n}\n\n\"\"\"query root\"\"\"\ntype query_root {\n  \"\"\"\n  fetch data from the table: \"route\"\n  \"\"\"\n  route(\n    \"\"\"distinct select on columns\"\"\"\n    distinct_on: [route_select_column!]\n\n    \"\"\"limit the nuber of rows returned\"\"\"\n    limit: Int\n\n    \"\"\"skip the first n rows. Use only with order_by\"\"\"\n    offset: Int\n\n    \"\"\"sort the rows by one or more columns\"\"\"\n    order_by: [route_order_by!]\n\n    \"\"\"filter the rows returned\"\"\"\n    where: route_bool_exp\n  ): [route!]!\n\n  \"\"\"\n  fetch aggregated fields from the table: \"route\"\n  \"\"\"\n  route_aggregate(\n    \"\"\"distinct select on columns\"\"\"\n    distinct_on: [route_select_column!]\n\n    \"\"\"limit the nuber of rows returned\"\"\"\n    limit: Int\n\n    \"\"\"skip the first n rows. Use only with order_by\"\"\"\n    offset: Int\n\n    \"\"\"sort the rows by one or more columns\"\"\"\n    order_by: [route_order_by!]\n\n    \"\"\"filter the rows returned\"\"\"\n    where: route_bool_exp\n  ): route_aggregate!\n\n  \"\"\"fetch data from the table: \"route\" using primary key columns\"\"\"\n  route_by_pk(id: uuid!): route\n\n  \"\"\"\n  fetch data from the table: \"sailing\"\n  \"\"\"\n  sailing(\n    \"\"\"distinct select on columns\"\"\"\n    distinct_on: [sailing_select_column!]\n\n    \"\"\"limit the nuber of rows returned\"\"\"\n    limit: Int\n\n    \"\"\"skip the first n rows. Use only with order_by\"\"\"\n    offset: Int\n\n    \"\"\"sort the rows by one or more columns\"\"\"\n    order_by: [sailing_order_by!]\n\n    \"\"\"filter the rows returned\"\"\"\n    where: sailing_bool_exp\n  ): [sailing!]!\n\n  \"\"\"\n  fetch aggregated fields from the table: \"sailing\"\n  \"\"\"\n  sailing_aggregate(\n    \"\"\"distinct select on columns\"\"\"\n    distinct_on: [sailing_select_column!]\n\n    \"\"\"limit the nuber of rows returned\"\"\"\n    limit: Int\n\n    \"\"\"skip the first n rows. Use only with order_by\"\"\"\n    offset: Int\n\n    \"\"\"sort the rows by one or more columns\"\"\"\n    order_by: [sailing_order_by!]\n\n    \"\"\"filter the rows returned\"\"\"\n    where: sailing_bool_exp\n  ): sailing_aggregate!\n\n  \"\"\"fetch data from the table: \"sailing\" using primary key columns\"\"\"\n  sailing_by_pk(route_id: uuid!, scheduled_departure: timestamptz!): sailing\n\n  \"\"\"\n  fetch data from the table: \"todays_sailings\"\n  \"\"\"\n  todays_sailings(\n    \"\"\"distinct select on columns\"\"\"\n    distinct_on: [todays_sailings_select_column!]\n\n    \"\"\"limit the nuber of rows returned\"\"\"\n    limit: Int\n\n    \"\"\"skip the first n rows. Use only with order_by\"\"\"\n    offset: Int\n\n    \"\"\"sort the rows by one or more columns\"\"\"\n    order_by: [todays_sailings_order_by!]\n\n    \"\"\"filter the rows returned\"\"\"\n    where: todays_sailings_bool_exp\n  ): [todays_sailings!]!\n\n  \"\"\"\n  fetch aggregated fields from the table: \"todays_sailings\"\n  \"\"\"\n  todays_sailings_aggregate(\n    \"\"\"distinct select on columns\"\"\"\n    distinct_on: [todays_sailings_select_column!]\n\n    \"\"\"limit the nuber of rows returned\"\"\"\n    limit: Int\n\n    \"\"\"skip the first n rows. Use only with order_by\"\"\"\n    offset: Int\n\n    \"\"\"sort the rows by one or more columns\"\"\"\n    order_by: [todays_sailings_order_by!]\n\n    \"\"\"filter the rows returned\"\"\"\n    where: todays_sailings_bool_exp\n  ): todays_sailings_aggregate!\n}\n\n\"\"\"\ncolumns and relationships of \"route\"\n\"\"\"\ntype route {\n  average_sailing: String!\n  car_waits: Int\n  id: uuid!\n  oversize_waits: Int\n  route_name: String!\n  sailing_date: String\n\n  \"\"\"An array relationship\"\"\"\n  sailingsByrouteId(\n    \"\"\"distinct select on columns\"\"\"\n    distinct_on: [sailing_select_column!]\n\n    \"\"\"limit the nuber of rows returned\"\"\"\n    limit: Int\n\n    \"\"\"skip the first n rows. Use only with order_by\"\"\"\n    offset: Int\n\n    \"\"\"sort the rows by one or more columns\"\"\"\n    order_by: [sailing_order_by!]\n\n    \"\"\"filter the rows returned\"\"\"\n    where: sailing_bool_exp\n  ): [sailing!]!\n\n  \"\"\"An aggregated array relationship\"\"\"\n  sailingsByrouteId_aggregate(\n    \"\"\"distinct select on columns\"\"\"\n    distinct_on: [sailing_select_column!]\n\n    \"\"\"limit the nuber of rows returned\"\"\"\n    limit: Int\n\n    \"\"\"skip the first n rows. Use only with order_by\"\"\"\n    offset: Int\n\n    \"\"\"sort the rows by one or more columns\"\"\"\n    order_by: [sailing_order_by!]\n\n    \"\"\"filter the rows returned\"\"\"\n    where: sailing_bool_exp\n  ): sailing_aggregate!\n}\n\n\"\"\"\naggregated selection of \"route\"\n\"\"\"\ntype route_aggregate {\n  aggregate: route_aggregate_fields\n  nodes: [route!]!\n}\n\n\"\"\"\naggregate fields of \"route\"\n\"\"\"\ntype route_aggregate_fields {\n  avg: route_avg_fields\n  count(columns: [route_select_column!], distinct: Boolean): Int\n  max: route_max_fields\n  min: route_min_fields\n  stddev: route_stddev_fields\n  stddev_pop: route_stddev_pop_fields\n  stddev_samp: route_stddev_samp_fields\n  sum: route_sum_fields\n  var_pop: route_var_pop_fields\n  var_samp: route_var_samp_fields\n  variance: route_variance_fields\n}\n\n\"\"\"\norder by aggregate values of table \"route\"\n\"\"\"\ninput route_aggregate_order_by {\n  avg: route_avg_order_by\n  count: order_by\n  max: route_max_order_by\n  min: route_min_order_by\n  stddev: route_stddev_order_by\n  stddev_pop: route_stddev_pop_order_by\n  stddev_samp: route_stddev_samp_order_by\n  sum: route_sum_order_by\n  var_pop: route_var_pop_order_by\n  var_samp: route_var_samp_order_by\n  variance: route_variance_order_by\n}\n\n\"\"\"\ninput type for inserting array relation for remote table \"route\"\n\"\"\"\ninput route_arr_rel_insert_input {\n  data: [route_insert_input!]!\n  on_conflict: route_on_conflict\n}\n\n\"\"\"aggregate avg on columns\"\"\"\ntype route_avg_fields {\n  car_waits: Float\n  oversize_waits: Float\n}\n\n\"\"\"\norder by avg() on columns of table \"route\"\n\"\"\"\ninput route_avg_order_by {\n  car_waits: order_by\n  oversize_waits: order_by\n}\n\n\"\"\"\nBoolean expression to filter rows from the table \"route\". All fields are combined with a logical 'AND'.\n\"\"\"\ninput route_bool_exp {\n  _and: [route_bool_exp]\n  _not: route_bool_exp\n  _or: [route_bool_exp]\n  average_sailing: text_comparison_exp\n  car_waits: integer_comparison_exp\n  id: uuid_comparison_exp\n  oversize_waits: integer_comparison_exp\n  route_name: text_comparison_exp\n  sailing_date: text_comparison_exp\n  sailingsByrouteId: sailing_bool_exp\n}\n\n\"\"\"\nunique or primary key constraints on table \"route\"\n\"\"\"\nenum route_constraint {\n  \"\"\"unique or primary key constraint\"\"\"\n  route_pkey\n\n  \"\"\"unique or primary key constraint\"\"\"\n  route_route_name_key\n}\n\n\"\"\"\ninput type for incrementing integer columne in table \"route\"\n\"\"\"\ninput route_inc_input {\n  car_waits: Int\n  oversize_waits: Int\n}\n\n\"\"\"\ninput type for inserting data into table \"route\"\n\"\"\"\ninput route_insert_input {\n  average_sailing: String\n  car_waits: Int\n  id: uuid\n  oversize_waits: Int\n  route_name: String\n  sailing_date: String\n  sailingsByrouteId: sailing_arr_rel_insert_input\n}\n\n\"\"\"aggregate max on columns\"\"\"\ntype route_max_fields {\n  average_sailing: String\n  car_waits: Int\n  oversize_waits: Int\n  route_name: String\n  sailing_date: String\n}\n\n\"\"\"\norder by max() on columns of table \"route\"\n\"\"\"\ninput route_max_order_by {\n  average_sailing: order_by\n  car_waits: order_by\n  oversize_waits: order_by\n  route_name: order_by\n  sailing_date: order_by\n}\n\n\"\"\"aggregate min on columns\"\"\"\ntype route_min_fields {\n  average_sailing: String\n  car_waits: Int\n  oversize_waits: Int\n  route_name: String\n  sailing_date: String\n}\n\n\"\"\"\norder by min() on columns of table \"route\"\n\"\"\"\ninput route_min_order_by {\n  average_sailing: order_by\n  car_waits: order_by\n  oversize_waits: order_by\n  route_name: order_by\n  sailing_date: order_by\n}\n\n\"\"\"\nresponse of any mutation on the table \"route\"\n\"\"\"\ntype route_mutation_response {\n  \"\"\"number of affected rows by the mutation\"\"\"\n  affected_rows: Int!\n\n  \"\"\"data of the affected rows by the mutation\"\"\"\n  returning: [route!]!\n}\n\n\"\"\"\ninput type for inserting object relation for remote table \"route\"\n\"\"\"\ninput route_obj_rel_insert_input {\n  data: route_insert_input!\n  on_conflict: route_on_conflict\n}\n\n\"\"\"\non conflict condition type for table \"route\"\n\"\"\"\ninput route_on_conflict {\n  constraint: route_constraint!\n  update_columns: [route_update_column!]!\n}\n\n\"\"\"\nordering options when selecting data from \"route\"\n\"\"\"\ninput route_order_by {\n  average_sailing: order_by\n  car_waits: order_by\n  id: order_by\n  oversize_waits: order_by\n  route_name: order_by\n  sailing_date: order_by\n  sailingsByrouteId_aggregate: sailing_aggregate_order_by\n}\n\n\"\"\"\nselect columns of table \"route\"\n\"\"\"\nenum route_select_column {\n  \"\"\"column name\"\"\"\n  average_sailing\n\n  \"\"\"column name\"\"\"\n  car_waits\n\n  \"\"\"column name\"\"\"\n  id\n\n  \"\"\"column name\"\"\"\n  oversize_waits\n\n  \"\"\"column name\"\"\"\n  route_name\n\n  \"\"\"column name\"\"\"\n  sailing_date\n}\n\n\"\"\"\ninput type for updating data in table \"route\"\n\"\"\"\ninput route_set_input {\n  average_sailing: String\n  car_waits: Int\n  id: uuid\n  oversize_waits: Int\n  route_name: String\n  sailing_date: String\n}\n\n\"\"\"aggregate stddev on columns\"\"\"\ntype route_stddev_fields {\n  car_waits: Float\n  oversize_waits: Float\n}\n\n\"\"\"\norder by stddev() on columns of table \"route\"\n\"\"\"\ninput route_stddev_order_by {\n  car_waits: order_by\n  oversize_waits: order_by\n}\n\n\"\"\"aggregate stddev_pop on columns\"\"\"\ntype route_stddev_pop_fields {\n  car_waits: Float\n  oversize_waits: Float\n}\n\n\"\"\"\norder by stddev_pop() on columns of table \"route\"\n\"\"\"\ninput route_stddev_pop_order_by {\n  car_waits: order_by\n  oversize_waits: order_by\n}\n\n\"\"\"aggregate stddev_samp on columns\"\"\"\ntype route_stddev_samp_fields {\n  car_waits: Float\n  oversize_waits: Float\n}\n\n\"\"\"\norder by stddev_samp() on columns of table \"route\"\n\"\"\"\ninput route_stddev_samp_order_by {\n  car_waits: order_by\n  oversize_waits: order_by\n}\n\n\"\"\"aggregate sum on columns\"\"\"\ntype route_sum_fields {\n  car_waits: Int\n  oversize_waits: Int\n}\n\n\"\"\"\norder by sum() on columns of table \"route\"\n\"\"\"\ninput route_sum_order_by {\n  car_waits: order_by\n  oversize_waits: order_by\n}\n\n\"\"\"\nupdate columns of table \"route\"\n\"\"\"\nenum route_update_column {\n  \"\"\"column name\"\"\"\n  average_sailing\n\n  \"\"\"column name\"\"\"\n  car_waits\n\n  \"\"\"column name\"\"\"\n  id\n\n  \"\"\"column name\"\"\"\n  oversize_waits\n\n  \"\"\"column name\"\"\"\n  route_name\n\n  \"\"\"column name\"\"\"\n  sailing_date\n}\n\n\"\"\"aggregate var_pop on columns\"\"\"\ntype route_var_pop_fields {\n  car_waits: Float\n  oversize_waits: Float\n}\n\n\"\"\"\norder by var_pop() on columns of table \"route\"\n\"\"\"\ninput route_var_pop_order_by {\n  car_waits: order_by\n  oversize_waits: order_by\n}\n\n\"\"\"aggregate var_samp on columns\"\"\"\ntype route_var_samp_fields {\n  car_waits: Float\n  oversize_waits: Float\n}\n\n\"\"\"\norder by var_samp() on columns of table \"route\"\n\"\"\"\ninput route_var_samp_order_by {\n  car_waits: order_by\n  oversize_waits: order_by\n}\n\n\"\"\"aggregate variance on columns\"\"\"\ntype route_variance_fields {\n  car_waits: Float\n  oversize_waits: Float\n}\n\n\"\"\"\norder by variance() on columns of table \"route\"\n\"\"\"\ninput route_variance_order_by {\n  car_waits: order_by\n  oversize_waits: order_by\n}\n\n\"\"\"\ncolumns and relationships of \"sailing\"\n\"\"\"\ntype sailing {\n  actual_departure: timestamptz\n  eta: timestamptz\n  id: uuid!\n  percent_full: Int\n\n  \"\"\"An object relationship\"\"\"\n  routeByrouteId: route!\n  route_id: uuid!\n  sailing_status: String\n  scheduled_departure: timestamptz!\n  vessel: String\n}\n\n\"\"\"\naggregated selection of \"sailing\"\n\"\"\"\ntype sailing_aggregate {\n  aggregate: sailing_aggregate_fields\n  nodes: [sailing!]!\n}\n\n\"\"\"\naggregate fields of \"sailing\"\n\"\"\"\ntype sailing_aggregate_fields {\n  avg: sailing_avg_fields\n  count(columns: [sailing_select_column!], distinct: Boolean): Int\n  max: sailing_max_fields\n  min: sailing_min_fields\n  stddev: sailing_stddev_fields\n  stddev_pop: sailing_stddev_pop_fields\n  stddev_samp: sailing_stddev_samp_fields\n  sum: sailing_sum_fields\n  var_pop: sailing_var_pop_fields\n  var_samp: sailing_var_samp_fields\n  variance: sailing_variance_fields\n}\n\n\"\"\"\norder by aggregate values of table \"sailing\"\n\"\"\"\ninput sailing_aggregate_order_by {\n  avg: sailing_avg_order_by\n  count: order_by\n  max: sailing_max_order_by\n  min: sailing_min_order_by\n  stddev: sailing_stddev_order_by\n  stddev_pop: sailing_stddev_pop_order_by\n  stddev_samp: sailing_stddev_samp_order_by\n  sum: sailing_sum_order_by\n  var_pop: sailing_var_pop_order_by\n  var_samp: sailing_var_samp_order_by\n  variance: sailing_variance_order_by\n}\n\n\"\"\"\ninput type for inserting array relation for remote table \"sailing\"\n\"\"\"\ninput sailing_arr_rel_insert_input {\n  data: [sailing_insert_input!]!\n  on_conflict: sailing_on_conflict\n}\n\n\"\"\"aggregate avg on columns\"\"\"\ntype sailing_avg_fields {\n  percent_full: Float\n}\n\n\"\"\"\norder by avg() on columns of table \"sailing\"\n\"\"\"\ninput sailing_avg_order_by {\n  percent_full: order_by\n}\n\n\"\"\"\nBoolean expression to filter rows from the table \"sailing\". All fields are combined with a logical 'AND'.\n\"\"\"\ninput sailing_bool_exp {\n  _and: [sailing_bool_exp]\n  _not: sailing_bool_exp\n  _or: [sailing_bool_exp]\n  actual_departure: timestamptz_comparison_exp\n  eta: timestamptz_comparison_exp\n  id: uuid_comparison_exp\n  percent_full: integer_comparison_exp\n  routeByrouteId: route_bool_exp\n  route_id: uuid_comparison_exp\n  sailing_status: text_comparison_exp\n  scheduled_departure: timestamptz_comparison_exp\n  vessel: text_comparison_exp\n}\n\n\"\"\"\nunique or primary key constraints on table \"sailing\"\n\"\"\"\nenum sailing_constraint {\n  \"\"\"unique or primary key constraint\"\"\"\n  sailing_id_key\n\n  \"\"\"unique or primary key constraint\"\"\"\n  sailing_pkey\n}\n\n\"\"\"\ninput type for incrementing integer columne in table \"sailing\"\n\"\"\"\ninput sailing_inc_input {\n  percent_full: Int\n}\n\n\"\"\"\ninput type for inserting data into table \"sailing\"\n\"\"\"\ninput sailing_insert_input {\n  actual_departure: timestamptz\n  eta: timestamptz\n  id: uuid\n  percent_full: Int\n  routeByrouteId: route_obj_rel_insert_input\n  route_id: uuid\n  sailing_status: String\n  scheduled_departure: timestamptz\n  vessel: String\n}\n\n\"\"\"aggregate max on columns\"\"\"\ntype sailing_max_fields {\n  actual_departure: timestamptz\n  eta: timestamptz\n  percent_full: Int\n  sailing_status: String\n  scheduled_departure: timestamptz\n  vessel: String\n}\n\n\"\"\"\norder by max() on columns of table \"sailing\"\n\"\"\"\ninput sailing_max_order_by {\n  actual_departure: order_by\n  eta: order_by\n  percent_full: order_by\n  sailing_status: order_by\n  scheduled_departure: order_by\n  vessel: order_by\n}\n\n\"\"\"aggregate min on columns\"\"\"\ntype sailing_min_fields {\n  actual_departure: timestamptz\n  eta: timestamptz\n  percent_full: Int\n  sailing_status: String\n  scheduled_departure: timestamptz\n  vessel: String\n}\n\n\"\"\"\norder by min() on columns of table \"sailing\"\n\"\"\"\ninput sailing_min_order_by {\n  actual_departure: order_by\n  eta: order_by\n  percent_full: order_by\n  sailing_status: order_by\n  scheduled_departure: order_by\n  vessel: order_by\n}\n\n\"\"\"\nresponse of any mutation on the table \"sailing\"\n\"\"\"\ntype sailing_mutation_response {\n  \"\"\"number of affected rows by the mutation\"\"\"\n  affected_rows: Int!\n\n  \"\"\"data of the affected rows by the mutation\"\"\"\n  returning: [sailing!]!\n}\n\n\"\"\"\ninput type for inserting object relation for remote table \"sailing\"\n\"\"\"\ninput sailing_obj_rel_insert_input {\n  data: sailing_insert_input!\n  on_conflict: sailing_on_conflict\n}\n\n\"\"\"\non conflict condition type for table \"sailing\"\n\"\"\"\ninput sailing_on_conflict {\n  constraint: sailing_constraint!\n  update_columns: [sailing_update_column!]!\n}\n\n\"\"\"\nordering options when selecting data from \"sailing\"\n\"\"\"\ninput sailing_order_by {\n  actual_departure: order_by\n  eta: order_by\n  id: order_by\n  percent_full: order_by\n  routeByrouteId: route_order_by\n  route_id: order_by\n  sailing_status: order_by\n  scheduled_departure: order_by\n  vessel: order_by\n}\n\n\"\"\"\nselect columns of table \"sailing\"\n\"\"\"\nenum sailing_select_column {\n  \"\"\"column name\"\"\"\n  actual_departure\n\n  \"\"\"column name\"\"\"\n  eta\n\n  \"\"\"column name\"\"\"\n  id\n\n  \"\"\"column name\"\"\"\n  percent_full\n\n  \"\"\"column name\"\"\"\n  route_id\n\n  \"\"\"column name\"\"\"\n  sailing_status\n\n  \"\"\"column name\"\"\"\n  scheduled_departure\n\n  \"\"\"column name\"\"\"\n  vessel\n}\n\n\"\"\"\ninput type for updating data in table \"sailing\"\n\"\"\"\ninput sailing_set_input {\n  actual_departure: timestamptz\n  eta: timestamptz\n  id: uuid\n  percent_full: Int\n  route_id: uuid\n  sailing_status: String\n  scheduled_departure: timestamptz\n  vessel: String\n}\n\n\"\"\"aggregate stddev on columns\"\"\"\ntype sailing_stddev_fields {\n  percent_full: Float\n}\n\n\"\"\"\norder by stddev() on columns of table \"sailing\"\n\"\"\"\ninput sailing_stddev_order_by {\n  percent_full: order_by\n}\n\n\"\"\"aggregate stddev_pop on columns\"\"\"\ntype sailing_stddev_pop_fields {\n  percent_full: Float\n}\n\n\"\"\"\norder by stddev_pop() on columns of table \"sailing\"\n\"\"\"\ninput sailing_stddev_pop_order_by {\n  percent_full: order_by\n}\n\n\"\"\"aggregate stddev_samp on columns\"\"\"\ntype sailing_stddev_samp_fields {\n  percent_full: Float\n}\n\n\"\"\"\norder by stddev_samp() on columns of table \"sailing\"\n\"\"\"\ninput sailing_stddev_samp_order_by {\n  percent_full: order_by\n}\n\n\"\"\"aggregate sum on columns\"\"\"\ntype sailing_sum_fields {\n  percent_full: Int\n}\n\n\"\"\"\norder by sum() on columns of table \"sailing\"\n\"\"\"\ninput sailing_sum_order_by {\n  percent_full: order_by\n}\n\n\"\"\"\nupdate columns of table \"sailing\"\n\"\"\"\nenum sailing_update_column {\n  \"\"\"column name\"\"\"\n  actual_departure\n\n  \"\"\"column name\"\"\"\n  eta\n\n  \"\"\"column name\"\"\"\n  id\n\n  \"\"\"column name\"\"\"\n  percent_full\n\n  \"\"\"column name\"\"\"\n  route_id\n\n  \"\"\"column name\"\"\"\n  sailing_status\n\n  \"\"\"column name\"\"\"\n  scheduled_departure\n\n  \"\"\"column name\"\"\"\n  vessel\n}\n\n\"\"\"aggregate var_pop on columns\"\"\"\ntype sailing_var_pop_fields {\n  percent_full: Float\n}\n\n\"\"\"\norder by var_pop() on columns of table \"sailing\"\n\"\"\"\ninput sailing_var_pop_order_by {\n  percent_full: order_by\n}\n\n\"\"\"aggregate var_samp on columns\"\"\"\ntype sailing_var_samp_fields {\n  percent_full: Float\n}\n\n\"\"\"\norder by var_samp() on columns of table \"sailing\"\n\"\"\"\ninput sailing_var_samp_order_by {\n  percent_full: order_by\n}\n\n\"\"\"aggregate variance on columns\"\"\"\ntype sailing_variance_fields {\n  percent_full: Float\n}\n\n\"\"\"\norder by variance() on columns of table \"sailing\"\n\"\"\"\ninput sailing_variance_order_by {\n  percent_full: order_by\n}\n\n\"\"\"subscription root\"\"\"\ntype subscription_root {\n  \"\"\"\n  fetch data from the table: \"route\"\n  \"\"\"\n  route(\n    \"\"\"distinct select on columns\"\"\"\n    distinct_on: [route_select_column!]\n\n    \"\"\"limit the nuber of rows returned\"\"\"\n    limit: Int\n\n    \"\"\"skip the first n rows. Use only with order_by\"\"\"\n    offset: Int\n\n    \"\"\"sort the rows by one or more columns\"\"\"\n    order_by: [route_order_by!]\n\n    \"\"\"filter the rows returned\"\"\"\n    where: route_bool_exp\n  ): [route!]!\n\n  \"\"\"\n  fetch aggregated fields from the table: \"route\"\n  \"\"\"\n  route_aggregate(\n    \"\"\"distinct select on columns\"\"\"\n    distinct_on: [route_select_column!]\n\n    \"\"\"limit the nuber of rows returned\"\"\"\n    limit: Int\n\n    \"\"\"skip the first n rows. Use only with order_by\"\"\"\n    offset: Int\n\n    \"\"\"sort the rows by one or more columns\"\"\"\n    order_by: [route_order_by!]\n\n    \"\"\"filter the rows returned\"\"\"\n    where: route_bool_exp\n  ): route_aggregate!\n\n  \"\"\"fetch data from the table: \"route\" using primary key columns\"\"\"\n  route_by_pk(id: uuid!): route\n\n  \"\"\"\n  fetch data from the table: \"sailing\"\n  \"\"\"\n  sailing(\n    \"\"\"distinct select on columns\"\"\"\n    distinct_on: [sailing_select_column!]\n\n    \"\"\"limit the nuber of rows returned\"\"\"\n    limit: Int\n\n    \"\"\"skip the first n rows. Use only with order_by\"\"\"\n    offset: Int\n\n    \"\"\"sort the rows by one or more columns\"\"\"\n    order_by: [sailing_order_by!]\n\n    \"\"\"filter the rows returned\"\"\"\n    where: sailing_bool_exp\n  ): [sailing!]!\n\n  \"\"\"\n  fetch aggregated fields from the table: \"sailing\"\n  \"\"\"\n  sailing_aggregate(\n    \"\"\"distinct select on columns\"\"\"\n    distinct_on: [sailing_select_column!]\n\n    \"\"\"limit the nuber of rows returned\"\"\"\n    limit: Int\n\n    \"\"\"skip the first n rows. Use only with order_by\"\"\"\n    offset: Int\n\n    \"\"\"sort the rows by one or more columns\"\"\"\n    order_by: [sailing_order_by!]\n\n    \"\"\"filter the rows returned\"\"\"\n    where: sailing_bool_exp\n  ): sailing_aggregate!\n\n  \"\"\"fetch data from the table: \"sailing\" using primary key columns\"\"\"\n  sailing_by_pk(route_id: uuid!, scheduled_departure: timestamptz!): sailing\n\n  \"\"\"\n  fetch data from the table: \"todays_sailings\"\n  \"\"\"\n  todays_sailings(\n    \"\"\"distinct select on columns\"\"\"\n    distinct_on: [todays_sailings_select_column!]\n\n    \"\"\"limit the nuber of rows returned\"\"\"\n    limit: Int\n\n    \"\"\"skip the first n rows. Use only with order_by\"\"\"\n    offset: Int\n\n    \"\"\"sort the rows by one or more columns\"\"\"\n    order_by: [todays_sailings_order_by!]\n\n    \"\"\"filter the rows returned\"\"\"\n    where: todays_sailings_bool_exp\n  ): [todays_sailings!]!\n\n  \"\"\"\n  fetch aggregated fields from the table: \"todays_sailings\"\n  \"\"\"\n  todays_sailings_aggregate(\n    \"\"\"distinct select on columns\"\"\"\n    distinct_on: [todays_sailings_select_column!]\n\n    \"\"\"limit the nuber of rows returned\"\"\"\n    limit: Int\n\n    \"\"\"skip the first n rows. Use only with order_by\"\"\"\n    offset: Int\n\n    \"\"\"sort the rows by one or more columns\"\"\"\n    order_by: [todays_sailings_order_by!]\n\n    \"\"\"filter the rows returned\"\"\"\n    where: todays_sailings_bool_exp\n  ): todays_sailings_aggregate!\n}\n\n\"\"\"\nexpression to compare columns of type text. All fields are combined with logical 'AND'.\n\"\"\"\ninput text_comparison_exp {\n  _eq: String\n  _gt: String\n  _gte: String\n  _ilike: String\n  _in: [String]\n  _is_null: Boolean\n  _like: String\n  _lt: String\n  _lte: String\n  _neq: String\n  _nilike: String\n  _nin: [String]\n  _nlike: String\n  _nsimilar: String\n  _similar: String\n}\n\nscalar timestamptz\n\n\"\"\"\nexpression to compare columns of type timestamptz. All fields are combined with logical 'AND'.\n\"\"\"\ninput timestamptz_comparison_exp {\n  _eq: timestamptz\n  _gt: timestamptz\n  _gte: timestamptz\n  _in: [timestamptz]\n  _is_null: Boolean\n  _lt: timestamptz\n  _lte: timestamptz\n  _neq: timestamptz\n  _nin: [timestamptz]\n}\n\n\"\"\"\ncolumns and relationships of \"todays_sailings\"\n\"\"\"\ntype todays_sailings {\n  actual_departure: timestamptz\n  eta: timestamptz\n  id: uuid\n  percent_full: Int\n  route_id: uuid\n  sailing_status: String\n  scheduled_departure: timestamptz\n  vessel: String\n}\n\n\"\"\"\naggregated selection of \"todays_sailings\"\n\"\"\"\ntype todays_sailings_aggregate {\n  aggregate: todays_sailings_aggregate_fields\n  nodes: [todays_sailings!]!\n}\n\n\"\"\"\naggregate fields of \"todays_sailings\"\n\"\"\"\ntype todays_sailings_aggregate_fields {\n  avg: todays_sailings_avg_fields\n  count(columns: [todays_sailings_select_column!], distinct: Boolean): Int\n  max: todays_sailings_max_fields\n  min: todays_sailings_min_fields\n  stddev: todays_sailings_stddev_fields\n  stddev_pop: todays_sailings_stddev_pop_fields\n  stddev_samp: todays_sailings_stddev_samp_fields\n  sum: todays_sailings_sum_fields\n  var_pop: todays_sailings_var_pop_fields\n  var_samp: todays_sailings_var_samp_fields\n  variance: todays_sailings_variance_fields\n}\n\n\"\"\"\norder by aggregate values of table \"todays_sailings\"\n\"\"\"\ninput todays_sailings_aggregate_order_by {\n  avg: todays_sailings_avg_order_by\n  count: order_by\n  max: todays_sailings_max_order_by\n  min: todays_sailings_min_order_by\n  stddev: todays_sailings_stddev_order_by\n  stddev_pop: todays_sailings_stddev_pop_order_by\n  stddev_samp: todays_sailings_stddev_samp_order_by\n  sum: todays_sailings_sum_order_by\n  var_pop: todays_sailings_var_pop_order_by\n  var_samp: todays_sailings_var_samp_order_by\n  variance: todays_sailings_variance_order_by\n}\n\n\"\"\"\ninput type for inserting array relation for remote table \"todays_sailings\"\n\"\"\"\ninput todays_sailings_arr_rel_insert_input {\n  data: [todays_sailings_insert_input!]!\n}\n\n\"\"\"aggregate avg on columns\"\"\"\ntype todays_sailings_avg_fields {\n  percent_full: Float\n}\n\n\"\"\"\norder by avg() on columns of table \"todays_sailings\"\n\"\"\"\ninput todays_sailings_avg_order_by {\n  percent_full: order_by\n}\n\n\"\"\"\nBoolean expression to filter rows from the table \"todays_sailings\". All fields are combined with a logical 'AND'.\n\"\"\"\ninput todays_sailings_bool_exp {\n  _and: [todays_sailings_bool_exp]\n  _not: todays_sailings_bool_exp\n  _or: [todays_sailings_bool_exp]\n  actual_departure: timestamptz_comparison_exp\n  eta: timestamptz_comparison_exp\n  id: uuid_comparison_exp\n  percent_full: integer_comparison_exp\n  route_id: uuid_comparison_exp\n  sailing_status: text_comparison_exp\n  scheduled_departure: timestamptz_comparison_exp\n  vessel: text_comparison_exp\n}\n\n\"\"\"\ninput type for incrementing integer columne in table \"todays_sailings\"\n\"\"\"\ninput todays_sailings_inc_input {\n  percent_full: Int\n}\n\n\"\"\"\ninput type for inserting data into table \"todays_sailings\"\n\"\"\"\ninput todays_sailings_insert_input {\n  actual_departure: timestamptz\n  eta: timestamptz\n  id: uuid\n  percent_full: Int\n  route_id: uuid\n  sailing_status: String\n  scheduled_departure: timestamptz\n  vessel: String\n}\n\n\"\"\"aggregate max on columns\"\"\"\ntype todays_sailings_max_fields {\n  actual_departure: timestamptz\n  eta: timestamptz\n  percent_full: Int\n  sailing_status: String\n  scheduled_departure: timestamptz\n  vessel: String\n}\n\n\"\"\"\norder by max() on columns of table \"todays_sailings\"\n\"\"\"\ninput todays_sailings_max_order_by {\n  actual_departure: order_by\n  eta: order_by\n  percent_full: order_by\n  sailing_status: order_by\n  scheduled_departure: order_by\n  vessel: order_by\n}\n\n\"\"\"aggregate min on columns\"\"\"\ntype todays_sailings_min_fields {\n  actual_departure: timestamptz\n  eta: timestamptz\n  percent_full: Int\n  sailing_status: String\n  scheduled_departure: timestamptz\n  vessel: String\n}\n\n\"\"\"\norder by min() on columns of table \"todays_sailings\"\n\"\"\"\ninput todays_sailings_min_order_by {\n  actual_departure: order_by\n  eta: order_by\n  percent_full: order_by\n  sailing_status: order_by\n  scheduled_departure: order_by\n  vessel: order_by\n}\n\n\"\"\"\nresponse of any mutation on the table \"todays_sailings\"\n\"\"\"\ntype todays_sailings_mutation_response {\n  \"\"\"number of affected rows by the mutation\"\"\"\n  affected_rows: Int!\n\n  \"\"\"data of the affected rows by the mutation\"\"\"\n  returning: [todays_sailings!]!\n}\n\n\"\"\"\ninput type for inserting object relation for remote table \"todays_sailings\"\n\"\"\"\ninput todays_sailings_obj_rel_insert_input {\n  data: todays_sailings_insert_input!\n}\n\n\"\"\"\nordering options when selecting data from \"todays_sailings\"\n\"\"\"\ninput todays_sailings_order_by {\n  actual_departure: order_by\n  eta: order_by\n  id: order_by\n  percent_full: order_by\n  route_id: order_by\n  sailing_status: order_by\n  scheduled_departure: order_by\n  vessel: order_by\n}\n\n\"\"\"\nselect columns of table \"todays_sailings\"\n\"\"\"\nenum todays_sailings_select_column {\n  \"\"\"column name\"\"\"\n  actual_departure\n\n  \"\"\"column name\"\"\"\n  eta\n\n  \"\"\"column name\"\"\"\n  id\n\n  \"\"\"column name\"\"\"\n  percent_full\n\n  \"\"\"column name\"\"\"\n  route_id\n\n  \"\"\"column name\"\"\"\n  sailing_status\n\n  \"\"\"column name\"\"\"\n  scheduled_departure\n\n  \"\"\"column name\"\"\"\n  vessel\n}\n\n\"\"\"\ninput type for updating data in table \"todays_sailings\"\n\"\"\"\ninput todays_sailings_set_input {\n  actual_departure: timestamptz\n  eta: timestamptz\n  id: uuid\n  percent_full: Int\n  route_id: uuid\n  sailing_status: String\n  scheduled_departure: timestamptz\n  vessel: String\n}\n\n\"\"\"aggregate stddev on columns\"\"\"\ntype todays_sailings_stddev_fields {\n  percent_full: Float\n}\n\n\"\"\"\norder by stddev() on columns of table \"todays_sailings\"\n\"\"\"\ninput todays_sailings_stddev_order_by {\n  percent_full: order_by\n}\n\n\"\"\"aggregate stddev_pop on columns\"\"\"\ntype todays_sailings_stddev_pop_fields {\n  percent_full: Float\n}\n\n\"\"\"\norder by stddev_pop() on columns of table \"todays_sailings\"\n\"\"\"\ninput todays_sailings_stddev_pop_order_by {\n  percent_full: order_by\n}\n\n\"\"\"aggregate stddev_samp on columns\"\"\"\ntype todays_sailings_stddev_samp_fields {\n  percent_full: Float\n}\n\n\"\"\"\norder by stddev_samp() on columns of table \"todays_sailings\"\n\"\"\"\ninput todays_sailings_stddev_samp_order_by {\n  percent_full: order_by\n}\n\n\"\"\"aggregate sum on columns\"\"\"\ntype todays_sailings_sum_fields {\n  percent_full: Int\n}\n\n\"\"\"\norder by sum() on columns of table \"todays_sailings\"\n\"\"\"\ninput todays_sailings_sum_order_by {\n  percent_full: order_by\n}\n\n\"\"\"aggregate var_pop on columns\"\"\"\ntype todays_sailings_var_pop_fields {\n  percent_full: Float\n}\n\n\"\"\"\norder by var_pop() on columns of table \"todays_sailings\"\n\"\"\"\ninput todays_sailings_var_pop_order_by {\n  percent_full: order_by\n}\n\n\"\"\"aggregate var_samp on columns\"\"\"\ntype todays_sailings_var_samp_fields {\n  percent_full: Float\n}\n\n\"\"\"\norder by var_samp() on columns of table \"todays_sailings\"\n\"\"\"\ninput todays_sailings_var_samp_order_by {\n  percent_full: order_by\n}\n\n\"\"\"aggregate variance on columns\"\"\"\ntype todays_sailings_variance_fields {\n  percent_full: Float\n}\n\n\"\"\"\norder by variance() on columns of table \"todays_sailings\"\n\"\"\"\ninput todays_sailings_variance_order_by {\n  percent_full: order_by\n}\n\nscalar uuid\n\n\"\"\"\nexpression to compare columns of type uuid. All fields are combined with logical 'AND'.\n\"\"\"\ninput uuid_comparison_exp {\n  _eq: uuid\n  _gt: uuid\n  _gte: uuid\n  _in: [uuid]\n  _is_null: Boolean\n  _lt: uuid\n  _lte: uuid\n  _neq: uuid\n  _nin: [uuid]\n}\n"}